imports:
- path: vpc.jinja
- path: ha-ap.jinja

{% import "utils/fgtconfig.jinja" as fgtconfig %}
{% set prefix=env.deployment %}

resources:
- name: HubVPC
  type: vpc.jinja
  properties:
    prefix: {{ prefix }}
    region: {{ properties["region"]}}
    hubNetwork: {{ properties["hubNetwork"]}}
    haNetwork: {{ properties["haNetwork"]}}
    mgmtNetwork: {{ properties["mgmtNetwork"]}}
    spokeNetworks: {{ properties["spokeNetworks"]}}
- name: Fortigate Cluster
  type: ha-ap.jinja
  properties:
    prefix: {{ prefix }}
    region: {{ properties.region }}
    zone1: {{ properties["zone1"]}}
    zone2: {{ properties["zone2"]}}
    instanceType: {{ properties["fgtInstanceType"]}}
    serviceAccount: {{ properties.fgtServiceAccount }}
    license: {{ properties.license }}
    version: {{ properties.version }}
    fwConfig: |
      {{ fgtconfig.configSpokeAddresses( prefix, properties.spokeNetworks )|indent(6) }}
    networks:
      data:
        vpc: $(ref.HubVPC.hubVpcRef)
        subnet: $(ref.HubVPC.hubSubnetRef)
        cidr: {{ properties.hubNetwork.ipCidrRange }}
      hasync:
        vpc: $(ref.HubVPC.haVpcRef)
        subnet: $(ref.HubVPC.haSubnetRef)
        cidr: {{ properties.haNetwork.ipCidrRange }}
      mgmt:
        vpc: $(ref.HubVPC.mgmtVpcRef)
        subnet: $(ref.HubVPC.mgmtSubnetRef)
        cidr: {{ properties.mgmtNetwork.ipCidrRange }}

outputs:
- name: peerings_script
  value: |
    {{ fgtconfig.fixPeerings( prefix, properties.spokeNetworks, properties.hubNetwork )|indent(4)}}