{% set hubVpcName = properties.prefix ~ '-' ~ properties.hubNetworks.internal.name %}
{% set hubSubnetName = hubVpcName ~ '-subnet' %}

{% import "../utils/netcalc.jinja" as netcalc %}

resources:
- name: {{ hubVpcName }}
  type: compute.v1.network
  properties:
    autoCreateSubnetworks: no
- name: {{ hubSubnetName }}
  type: compute.v1.subnetwork
  properties:
    region: {{ properties.region }}
    network: $(ref.{{ hubVpcName }}.selfLink)
    ipCidrRange: {{ properties.hubNetworks.internal.ipCidrRange }}
- name: {{ properties.prefix }}-{{ properties.hubNetworks.external.name }}
  type: compute.v1.network
  properties:
    autoCreateSubnetworks: no
- name: {{ properties.prefix }}-{{ properties.hubNetworks.external.name }}-subnet
  type: compute.v1.subnetwork
  properties:
    region: {{properties.region }}
    network: $(ref.{{ properties.prefix }}-{{ properties.hubNetworks.external.name }}.selfLink)
    ipCidrRange: {{properties.hubNetworks.external.ipCidrRange}}
- name: {{ properties.prefix }}-{{ properties.hubNetworks.hasync.name }}
  type: compute.v1.network
  properties:
    autoCreateSubnetworks: no
- name: {{ properties.prefix }}-{{ properties.hubNetworks.hasync.name }}-subnet
  type: compute.v1.subnetwork
  properties:
    region: {{properties.region }}
    network: $(ref.{{ properties.prefix }}-{{ properties.hubNetworks.hasync.name }}.selfLink)
    ipCidrRange: {{properties.hubNetworks.hasync.ipCidrRange}}
- name: {{ properties.prefix }}-{{ properties.hubNetworks.mgmt.name }}
  type: compute.v1.network
  properties:
    autoCreateSubnetworks: no
- name: {{ properties.prefix }}-{{ properties.hubNetworks.mgmt.name }}-subnet
  type: compute.v1.subnetwork
  properties:
    region: {{properties.region }}
    network: $(ref.{{ properties.prefix }}-{{ properties.hubNetworks.mgmt.name }}.selfLink)
    ipCidrRange: {{properties.hubNetworks.mgmt.ipCidrRange}}
{% for spoke in properties.spokeNetworks %}
{% set spokeVpcName = properties.prefix ~ '-' ~ spoke.name %}
{% if "vpc" in spoke %}
{% set spokeVpcName=spoke.vpc %}
{% else %}
- name: {{ spokeVpcName }}
  type: compute.v1.network
  properties:
    autoCreateSubnetworks: no
- name: {{ spokeVpcName }}-subnet
  type: compute.v1.subnetwork
  properties:
    region: {{properties.region }}
    network: $(ref.{{ spokeVpcName }}.selfLink)
    ipCidrRange: {{ spoke.ipCidrRange }}
- name: {{ spoke.name}}-defaultRouteList
  action: gcp-types/compute-v1:compute.routes.list
  properties:
    filter: (destRange="0.0.0.0/0") AND (network="$(ref.{{ spokeVpcName }}.selfLink)")
- name: {{ spoke.name }}-deleteDirectDefaultRoute
  action: gcp-types/compute-v1:compute.routes.delete
  metadata:
    runtimePolicy:
    - CREATE
  properties:
    route: $(ref.{{ spoke.name }}-defaultRouteList.items[0].name)
{% endif %}

- name: {{ properties.prefix }}-{{spoke.name}}-allow-all
  type: compute.v1.firewall
  properties:
  {% if "vpc" in spoke %}
    network: {{ spoke.vpc }}
  {% else %}
    network: $(ref.{{spokeVpcName}}.selfLink)
  {% endif %}
    priority: 100
    sourceRanges:
    - 0.0.0.0/0
    allowed:
    - IPProtocol: TCP
    - IPProtocol: UDP
    - IPProtocol: ICMP
- name: {{ properties.prefix }}-peering-{{ spoke.name }}-to-hub
  action: gcp-types/compute-v1:compute.networks.addPeering
  properties:
    network: {{ spokeVpcName.split('/') | last }}
    networkPeering:
      name: {{ properties.prefix }}-peering-{{ spoke.name }}-to-hub
      network: $(ref.{{ hubVpcName }}.selfLink)
      exchangeSubnetRoutes: true
      importCustomRoutes: true
  metadata:
    runtimePolicy:
    - CREATE
    dependsOn:
    - {{ hubVpcName }}
    - {{ properties.prefix }}-default-via-fgt
    {% if not "vpc" in spoke %}
    - {{ spokeVpcName }}
    - {{ spoke.name }}-deleteDirectDefaultRoute
    {% endif %}
    {% if not loop.first %}
    - {{ properties.prefix }}-peering-hub-to-{{ properties.spokeNetworks[loop.index0-1].name }}
    {% endif %}
- name: {{ properties.prefix }}-peering-hub-to-{{ spoke.name }}
  action: gcp-types/compute-v1:compute.networks.addPeering
  properties:
    network: {{ hubVpcName }}
    networkPeering:
      name: {{ properties.prefix }}-peering-hub-to-{{ spoke.name }}
    {% if "vpc" in spoke %}
      network: {{ spoke.vpc }}
    {% else %}
      network: $(ref.{{spokeVpcName}}.selfLink)
    {% endif %}
      exchangeSubnetRoutes: true
      exportCustomRoutes: true
  metadata:
    runtimePolicy:
    - CREATE
    dependsOn:
    - {{ properties.prefix }}-peering-{{ spoke.name }}-to-hub
{% endfor %}

outputs:
- name: hubVpcRef
  value: $(ref.{{ hubVpcName }}.selfLink)
- name: hubSubnetRef
  value: $(ref.{{ hubSubnetName }}.selfLink)
- name: extVpcRef
  value: $(ref.{{ properties.prefix }}-{{ properties.hubNetworks.external.name }}.selfLink)
- name: extSubnetRef
  value: $(ref.{{ properties.prefix }}-{{ properties.hubNetworks.external.name }}-subnet.selfLink)
- name: haVpcRef
  value: $(ref.{{ properties.prefix }}-{{ properties.hubNetworks.hasync.name }}.selfLink)
- name: haSubnetRef
  value: $(ref.{{ properties.prefix }}-{{ properties.hubNetworks.hasync.name }}-subnet.selfLink)
- name: mgmtVpcRef
  value: $(ref.{{ properties.prefix }}-{{ properties.hubNetworks.mgmt.name }}.selfLink)
- name: mgmtSubnetRef
  value: $(ref.{{ properties.prefix }}-{{ properties.hubNetworks.mgmt.name }}-subnet.selfLink)
